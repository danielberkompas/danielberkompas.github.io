<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Patterns on Bits &amp; Sundry</title>
    <link>https://blog.danielberkompas.com/tags/patterns/</link>
    <description>Recent content in Patterns on Bits &amp; Sundry</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Mar 2018 04:25:00 -0700</lastBuildDate>
    
	<atom:link href="https://blog.danielberkompas.com/tags/patterns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flexible Design with Adapters</title>
      <link>https://blog.danielberkompas.com/2018/03/17/flexible-design-with-adapters/</link>
      <pubDate>Sat, 17 Mar 2018 04:25:00 -0700</pubDate>
      
      <guid>https://blog.danielberkompas.com/2018/03/17/flexible-design-with-adapters/</guid>
      <description>&lt;p&gt;With Phoenix 1.3 well behind us now, Elixir developers understand how to
approach most problems &amp;ldquo;The Elixir Way&amp;rdquo;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a well-named context module for the problem, e.g. &amp;ldquo;Payment&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Put functions in it, which don&amp;rsquo;t expose how data is persisted&lt;/li&gt;
&lt;li&gt;Profit&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>