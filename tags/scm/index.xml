<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scm on Random Bits</title>
    <link>https://blog.danielberkompas.com/tags/scm/</link>
    <description>Recent content in Scm on Random Bits</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.danielberkompas.com/tags/scm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Avoid Long-Lived Feature Branches</title>
      <link>https://blog.danielberkompas.com/2015/07/28/long-running-branches/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.danielberkompas.com/2015/07/28/long-running-branches/</guid>
      <description>&lt;p&gt;Today, I intend to rail against the evils of long-lived feature branches. Having collaborated on a number of projects where they happened, I&amp;rsquo;m now convinced that they are almost always the wrong way to go.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Undo a Commit in Git</title>
      <link>https://blog.danielberkompas.com/2015/02/19/undo-git-commit/</link>
      <pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.danielberkompas.com/2015/02/19/undo-git-commit/</guid>
      <description>I keep forgetting how to do this, so I thought I&amp;rsquo;d post this for my own future benefit:
// Completely deletes the most recent commit $ git reset --hard HEAD~1 // Removes the most recent commit, but leaves changes intact. Useful if you // might want to make a new commit. $ git reset --soft HEAD~1</description>
    </item>
    
  </channel>
</rss>